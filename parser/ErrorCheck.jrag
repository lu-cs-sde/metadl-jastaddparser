/*
 * The JastAdd Extensible Java Compiler (http://jastadd.org) is covered
 * by the modified BSD License. You should have received a copy of the
 * modified BSD license with this compiler.
 * 
 * Copyright (c) 2005-2008, Torbjorn Ekman
 * All rights reserved.
 */

import java.util.*;

aspect ErrorCheck {
//  public void ASTNode.errorCheck(Collection errors, Collection warnings) {
//    errorCheck(errors, warnings);
//  }
	
	  public void ASTNode.errorCheck(Collection err, Collection warn) {
		    nameCheck();
		    if (hasErrors())
		    	err.add(errors);
		    if (hasWarnings())
		    	warn.add(warnings);
		    for(int i = 0; i < getNumChild(); i++) {
		      getChild(i).errorCheck(err, warn);
		    }
		  }
  
  protected String ASTNode.errors = null;
  protected String ASTNode.warnings = null;
  
  protected void ASTNode.error(String s) {
    s = "Semantic Error at line " + getLine(getStart()) + " column " + getColumn(getStart()) + ": " + s;
    if(errors == null)
      errors = s;
    else
      errors = errors + "\n" + s;
  }
  
  protected void ASTNode.warning(String s) {
	    s = "Warning: " + s + " (" + getLine(getStart()) + ":" + getColumn(getStart()) + ")";
	    if(warnings == null)
	    	warnings = s;
	    else
	    	warnings = warnings + "\n" + s;
	  }

  protected boolean ASTNode.hasErrors() {
    return errors != null;
  }
  
  protected boolean ASTNode.hasWarnings() {
	    return warnings != null;
	  }
}
