<project
	name    = "JastAddParser"
	default = "build" >

	<property name = "ASTPackage" value = "org.jastadd.jastaddparser.AST" />
	<property name = "ast.dir" value = "src/gen/org/jastadd/jastaddparser/AST" />
	<property name = "tmp.dir" location="src/tmp"/>
	<property name = "gen.dir" location="src/gen"/>
	<property name = "src.dir" location="src/java"/>
	<property name = "testsrc.dir" location="src/test"/>
	<property name="testout.dir" location="tmp"/>
	<property name = "bin.dir" location="ant-bin"/>
	<property name = "tools.dir" location="tools"/>

	<taskdef
		name      = "jflex"
		classname = "JFlex.anttask.JFlexTask"
		classpath = "${tools.dir}/JFlex.jar" />

	<taskdef
		name      = "beaver"
		classname = "beaver.comp.run.AntTask"
		classpath = "${tools.dir}/beaver-ant.jar" />

	<taskdef
		name      = "jastadd"
		classname = "jastadd.JastAddTask"
		classpath = "${tools.dir}/jastadd2.jar" />


	<target name = "build" description = "Build JastAddParser">
		<mkdir dir="${gen.dir}"/>
		<jastadd
			package = "${ASTPackage}"
			rewrite = "true"
			beaver  = "true"
			outdir  = "${gen.dir}"
			>

			<fileset dir="src/jastadd">
				<include name="*.ast"/>
				<include name="*.jrag"/>
				<include name="*.jadd"/>
			</fileset>

		</jastadd>

		<jflex
			file  = "src/parser/Grammar.flex"
			outdir= "${gen.dir}/org/jastadd/jastaddparser/parser"
			nobak = "yes" />

		<mkdir dir="${tmp.dir}/parser"/>
		<java
			fork = "true"
			jar = "${tools.dir}/JastAddParser.jar">
			<arg value = "src/parser/GrammarParser.jastadd" />
			<arg value = "${tmp.dir}/parser/GrammarParser.beaver" />
		</java>

		<mkdir dir="${gen.dir}/org/jastadd/jastaddparser/parser"/>
		<beaver
			file          = "${tmp.dir}/parser/GrammarParser.beaver"
			destdir       = "${gen.dir}/org/jastadd/jastaddparser/parser"
			compress      = "no"
			useSwitch     = "yes"
			terminalNames = "yes" />

		<mkdir  dir="${bin.dir}" />
		<!-- Copy version resource. -->
		<copy todir="${bin.dir}">
			<fileset dir="src/res">
				<include name="**/*"/>
			</fileset>
		</copy>
		<javac
			debug     = "true"
			target    = "1.6"
			source    = "1.6"
			destdir   = "${bin.dir}"
			includeantruntime="true">
			<src path="${gen.dir}"/>
			<src path="${src.dir}"/>
			<classpath>
				<pathelement path="${tools.dir}/beaver-rt.jar"/>
			</classpath>
		</javac>

	</target>


	<target
		name    = "jar"
		depends = "build"
		description = "Create runnable JastAddParser.jar" >

		 <!-- standalone jar (includes Beaver runtime classes) -->
		<jar
			destfile = "JastAddParser.jar"
			compress = "false">

			<zipgroupfileset dir="${tools.dir}" includes="beaver-rt.jar"/>
			<fileset dir = "${bin.dir}">
				<include name = "**/*.class"/>
				<exclude name = "org/jastadd/jastaddparser/test/**/*.class"/>
				<exclude name = "org/jastadd/ant/**/*.class"/>
			</fileset>
			<fileset dir = "src/res">
				<include name = "**/*"/>
			</fileset>

			<manifest>
				<attribute name = "Main-Class" value = "org.jastadd.jastaddparser.Main" />
			</manifest>
		</jar>

		<!-- non-standalone Jar (depends on beaver-rt.jar) -->
		<jar
			destfile = "jastaddparser-lib.jar"
			compress = "false">

			<fileset dir = "${bin.dir}">
				<include name = "**/*.class"/>
				<exclude name = "org/jastadd/jastaddparser/test/**/*.class"/>
			</fileset>

			<fileset dir = "src/res">
				<include name = "**/*"/>
			</fileset>

			<manifest>
				<attribute name = "Main-Class" value = "org.jastadd.jastaddparser.Main" />
			</manifest>
		</jar>
	</target>


	<target
		name    = "source"
		depends = "jar"
		description = "Create source jars" >

		<jar destfile = "JastAddParser-src.jar" >
			<fileset dir = ".">
				<include name = "${src.dir}/**/*.java"/>
				<include name = "${testsrc.dir}/**/*.java"/>
				<include name = "src/parser/**/*"/>
				<include name = "licenses/**/*" />
				<include name = "src/res/**/*"/>
				<include name = "${tools.dir}/**/*.jar"/>
				<include name = "build.xml"/>
				<exclude name = "parser/*.beaver"/>
			</fileset>
		</jar>

		<!-- Minimal source jar rooted at src/ -->
		<jar destfile = "source.jar" >
			<fileset dir = "${src.dir}">
				<include name = "**/*.java"/>
			</fileset>
			<fileset dir = "${testsrc.dir}">
				<include name = "**/*.java"/>
			</fileset>
		</jar>
	</target>


	<target
		name    = "bootstrap"
		depends = "jar"
		description = "Bootstrap JastAddParser" >

		<echo>Copying the generated jar-file to directory tools</echo>
		<copy
			file      = "JastAddParser.jar"
			todir     = "${tools.dir}/"
			overwrite = "true" />
	</target>


	<target name = "clean" description = "Remove generated files">
		<delete dir = "${gen.dir}/${ast.dir}" />
		<delete file = "JastAddParser.jar" />
		<delete file = "JastAddParser-src.jar" />
		<delete file = "jastaddparser-lib.jar" />
		<delete file = "source.jar" />
		<delete dir = "${tmp.dir}" />
		<delete dir = "${testout.dir}" />
		<delete dir = "${gen.dir}" />
		<delete dir = "${bin.dir}" />
	</target>


	<target name = "release" description = "build a JastAddParser release" >
		<property file="src/res/Version.properties"/>
		<echo message="The new version will be tagged as ${version}."/>
		<input message="Press return to continue"/>
		<antcall target="build-dist"/>
		<exec executable="git">
			<arg value="add"/>
			<arg value="${tools.dir}/JastAddParser.jar"/>
		</exec>
		<exec executable="git">
			<arg value="commit"/>
			<arg value="-m"/>
			<arg value="Release ${version}"/>
		</exec>
		<exec executable="git">
			<arg value="tag"/>
			<arg value="-a"/>
			<arg value="${version}"/>
			<arg value="-m"/>
			<arg value="Version ${version}"/>
		</exec>
		<echo message="Release tag ${version} created."/>
		<echo message="To push the release commit:"/>
		<echo message="git push origin"/>
		<echo message="To push the release tag for version ${version}:"/>
		<echo message="git push origin ${version}"/>
	</target>

	<target name="build-dist" >
		<antcall target="bootstrap"/>
		<antcall target="source"/>
		<echo message="Source and binary jar files created."/>
	</target>

	<target name="build-tests" depends="jar" description="build test classes">
		<mkdir dir="${bin.dir}"/>
		<mkdir dir="${testout.dir}"/>
		<javac
			debug="true"
			destdir="${bin.dir}"
			includeantruntime="true">
			<src path="${src.dir}"/>
			<src path="${testsrc.dir}"/>
			<classpath>
				<pathelement path="${tools.dir}/junit-4.11-SNAPSHOT.jar"/>
				<pathelement path="${tools.dir}/beaver-rt.jar"/>
			</classpath>
		</javac>
	</target>

	<target name="test" depends="build-tests" description="run test">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${testout.dir}" includes="**/*"/>
		</delete>

		<junit fork="yes" showoutput="yes" dir="${basedir}">
			<classpath>
				<pathelement path="${bin.dir}"/>
				<pathelement path="${testout.dir}"/>
				<pathelement path="${tools.dir}/beaver-rt.jar"/>
				<pathelement path="${tools.dir}/junit-4.11-SNAPSHOT.jar"/>
			</classpath>
			<test name="org.jastadd.jastaddparser.test.TestJastAddParser"/>
			<formatter type="xml"/>
			<formatter classname="org.jastadd.ant.SimpleTestFormatter" usefile="false"/>
		</junit>
	</target>

</project>
