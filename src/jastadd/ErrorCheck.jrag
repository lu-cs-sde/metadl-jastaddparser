/* Copyright (c) 2005-2008, Torbjorn Ekman
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from this
 * software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

import java.util.*;

aspect ErrorCheck {

  public void ASTNode.errorCheck(Collection err, Collection warn) {
    nameCheck();
    if (hasErrors()) {
      err.add(errors);
    }
    if (hasWarnings()) {
      warn.add(warnings);
    }
    for (int i = 0; i < getNumChild(); i++) {
      getChild(i).errorCheck(err, warn);
    }
  }

  protected String ASTNode.errors = null;
  protected String ASTNode.warnings = null;

  protected void ASTNode.error(String s) {
    s = "Semantic Error at line " + getLine(getStart()) + " column " + getColumn(getStart()) + ": " + s;
    if (errors == null) {
      errors = s;
    } else {
      errors = errors + "\n" + s;
    }
  }

  protected void ASTNode.warning(String s) {
    s = "Warning: " + s + " (" + getLine(getStart()) + ":" + getColumn(getStart()) + ")";
    if (warnings == null) {
      warnings = s;
    } else {
      warnings = warnings + "\n" + s;
    }
  }

  protected boolean ASTNode.hasErrors() {
    return errors != null;
  }

  protected boolean ASTNode.hasWarnings() {
    return warnings != null;
  }
}
